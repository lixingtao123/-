import sqlite3
import os

# 数据库路径
DB_PATH = 'data/stock_simulator.db'

# 检查数据库是否存在
if not os.path.exists(DB_PATH):
    print(f"错误: 数据库文件不存在 - {DB_PATH}")
    exit(1)

# 连接数据库
conn = sqlite3.connect(DB_PATH)
cursor = conn.cursor()

# 要添加的股票列表 (代码, 名称, 初始价格, 初始涨跌幅)
# 包括主要指数、蓝筹股、热门科技股、消费股等
stocks_to_add = [
    # 指数
    ("sh.000300", "沪深300", 3500.00, 0.0),
    ("sz.399905", "中证500", 5800.00, 0.0),
    ("sh.000016", "上证50", 2600.00, 0.0),
    ("sz.399673", "创业板50", 2100.00, 0.0),
    
    # 金融股
    ("sh.601318", "中国平安", 42.50, 0.0),
    ("sh.600036", "招商银行", 35.80, 0.0),
    ("sh.601166", "兴业银行", 16.20, 0.0),
    
    # 科技股
    ("sh.600745", "闻泰科技", 45.60, 0.0),
    ("sz.002475", "立讯精密", 28.90, 0.0),
    ("sh.603501", "韦尔股份", 110.50, 0.0),
    ("sz.002371", "北方华创", 180.30, 0.0),
    ("sz.300223", "北京君正", 76.20, 0.0),
    
    # 消费股
    ("sh.600887", "伊利股份", 25.70, 0.0),
    ("sh.603288", "海天味业", 65.30, 0.0),
    ("sz.000858", "五粮液", 168.40, 0.0),
    ("sh.600519", "贵州茅台", 1780.00, 0.0),
    
    # 医药股
    ("sh.600276", "恒瑞医药", 32.80, 0.0),
    ("sz.300760", "迈瑞医疗", 245.60, 0.0),
    ("sz.300347", "泰格医药", 56.70, 0.0),
    
    # 新能源
    ("sz.300750", "宁德时代", 280.50, 0.0),
    ("sh.601012", "隆基绿能", 36.80, 0.0),
    ("sh.603799", "华友钴业", 42.30, 0.0),
    
    # 互联网
    ("sh.688981", "中芯国际", 56.40, 0.0),
    ("sz.002594", "比亚迪", 240.30, 0.0),
    ("sh.688111", "金山办公", 320.00, 0.0),
    
    # 其他行业
    ("sh.600104", "上汽集团", 15.20, 0.0),
    ("sh.601668", "中国建筑", 5.40, 0.0),
    ("sh.600029", "南方航空", 6.80, 0.0),
    ("sh.601398", "工商银行", 5.2, 0.1),
    ("sh.601939", "建设银行", 6.5, 0.2),
    ("sh.601288", "农业银行", 3.7, 0.05),
    ("sh.601988", "中国银行", 4.0, 0.08),
    ("sh.600036", "招商银行", 32.5, 0.8),
    ("sh.600000", "浦发银行", 7.2, -0.1),
    ("sh.601328", "交通银行", 5.8, 0.02),
    ("sh.601166", "兴业银行", 16.5, -0.3),
    ("sz.000001", "平安银行", 10.5, 0.3),
                # Financials - Insurance
    ("sh.601318", "中国平安", 42.0, 1.2),
    ("sh.601628", "中国人寿", 28.0, -0.5),
    ("sh.601601", "中国太保", 25.0, 0.7),
                # Financials - Securities
    ("sh.600030", "中信证券", 19.0, 0.9),
    ("sh.600837", "海通证券", 8.5, -0.2),
    ("sz.000776", "广发证券", 13.0, 1.1),
    ("sh.601211", "国泰君安", 13.8, 0.4),

                # Consumer Staples - Liquor
    ("sh.600519", "贵州茅台", 1555.0, -0.5),
    ("sz.000858", "五粮液", 145.0, -1.1),
    ("sz.000568", "泸州老窖", 170.0, 0.6),
    ("sh.600809", "山西汾酒", 220.0, 1.5),

                # Consumer Discretionary
    ("sz.000333", "美的集团", 55.0, 1.8),
    ("sz.000651", "格力电器", 35.0, -0.9),
    ("sh.600690", "海尔智家", 24.0, 0.5),
    ("sh.600104", "上汽集团", 14.0, -0.3),
    ("sz.002594", "比亚迪", 220.0, 3.0),
    ("sh.601633", "长城汽车", 25.0, 2.1),
    ("sh.603599", "广汇汽车", 1.8, -1.2),

                # Industrials & Materials
    ("sh.601111", "中国国航", 7.5, 0.2),
    ("sh.600115", "东方航空", 3.8, 0.1),
    ("sz.000002", "万科A", 8.5, -1.15),
    ("sh.600048", "保利发展", 9.0, -0.8),
    ("sh.601668", "中国建筑", 5.0, 0.3),
    ("sh.601800", "中国交建", 9.5, 0.5),
    ("sh.601390", "中国中铁", 6.8, 0.4),
    ("sh.600585", "海螺水泥", 22.0, -1.0),
    ("sh.601888", "中国中免", 85.0, 2.5),
    ("sh.600019", "宝钢股份", 6.2, 0.1),
    ("sz.002415", "海康威视", 32.0, 1.3),

                # Energy & Utilities
    ("sh.601857", "中国石油", 9.5, 0.6),
    ("sh.600028", "中国石化", 6.1, 0.3),
    ("sh.601088", "中国神华", 38.0, 1.1),
    ("sh.600900", "长江电力", 24.0, 0.2),
    ("sh.600031", "三一重工", 13.5, -0.7),

                # Healthcare
    ("sh.600276", "恒瑞医药", 43.0, -1.5),
    ("sz.300760", "迈瑞医疗", 270.0, 2.0),
    ("sh.600196", "复星医药", 22.0, 0.9),
    ("sz.000538", "云南白药", 48.0, -0.4),
    ("sh.600056", "中国医药", 15.0, 1.2),

                # Technology & Telecom
    ("sz.300750", "宁德时代", 188.0, 2.5),
    ("sz.300059", "东方财富", 12.0, 3.1),
    ("sh.601899", "紫金矿业", 16.5, 1.8),
    ("sh.603288", "海天味业", 38.0, -2.0),
    ("sz.002475", "立讯精密", 30.0, 2.2),
    ("sz.002230", "科大讯飞", 45.0, 1.5),
    ("sh.600703", "三安光电", 13.0, -0.6),
    ("sh.600588", "用友网络", 15.0, 0.8),
    ("sh.601360", "三六零", 8.0, -1.3),
    ("sh.688981", "中芯国际", 43.0, 2.8),
    ("sh.600050", "中国联通", 4.5, 0.1),
    ("sh.600941", "中国移动", 100.0, 0.5),

                # More stocks to reach ~100
    ("sz.002352", "顺丰控股", 35.0, 1.5),
    ("sh.601012", "隆基绿能", 20.0, 3.5),
    ("sh.600438", "通威股份", 25.0, 2.8),
    ("sz.000100", "TCL科技", 4.2, -0.5),
    ("sh.600875", "东方电气", 20.5, 1.1),
    ("sz.002027", "分众传媒", 6.5, -0.8),
    ("sz.000725", "京东方A", 4.0, 0.3),
    ("sh.600487", "亨通光电", 13.0, 0.7),
    ("sz.300124", "汇川技术", 65.0, 2.3),
    ("sz.002714", "牧原股份", 42.0, -1.9),
    ("sz.002371", "北方华创", 300.0, 4.0),
    ("sh.688036", "传音控股", 150.0, 3.2),
    ("sz.300308", "中际旭创", 160.0, 5.5),
    ("sh.601688", "华泰证券", 12.8, 0.9),
    ("sh.600600", "青岛啤酒", 75.0, -0.3),
    ("sz.000786", "北新建材", 21.0, 1.4),
    ("sh.600309", "万华化学", 80.0, -1.2),
    ("sh.601138", "工业富联", 25.0, 3.8),
    ("sh.600745", "闻泰科技", 38.0, 2.5),
    ("sz.002007", "华兰生物", 19.0, -0.6),
    ("sh.600547", "山东黄金", 28.0, 1.8),
    ("sz.002460", "赣锋锂业", 35.0, -2.1),
    ("sh.603993", "洛阳钼业", 8.0, 2.0),
    ("sh.601919", "中远海控", 13.0, 4.1),
    ("sz.002142", "宁波银行", 22.0, 0.4),
    ("sh.600016", "民生银行", 3.8, -0.1),
    ("sh.601229", "上海银行", 7.5, 0.2),
    ("sz.002821", "凯莱英", 80.0, -1.7),
    ("sz.300759", "康龙化成", 33.0, 1.3),
    ("sh.603259", "药明康德", 45.0, -2.5),
    ("sz.000750", "国元证券", 6.8, 0.6),
    ("sh.601878", "浙商证券", 10.2, 1.0),
    ("sz.002673", "西部证券", 6.5, 0.5),
    ("sh.600061", "国投资本", 7.0, 0.3),
    ("sh.600893", "航发动力", 36.0, 1.9),
    ("sh.600340", "华夏幸福", 1.2, -3.0),
    ("sz.000063", "中兴通讯", 26.0, 1.2),
    ("sh.600018", "上港集团", 5.5, 0.1),
    ("sz.000088", "盐田港", 4.8, 0.0),
    ("sh.600029", "南方航空", 6.5, 0.4),
    ("sh.601111", "中国国航", 9.50, 0.0)
]

# 先检查数据库中已有的股票
cursor.execute("SELECT code FROM stocks")
existing_stocks = set(row[0] for row in cursor.fetchall())

# 添加新股票
added_count = 0
skipped_count = 0

for code, name, price, change in stocks_to_add:
    if code in existing_stocks:
        print(f"跳过已存在的股票: {code} - {name}")
        skipped_count += 1
        continue
        
    try:
        cursor.execute('''
            INSERT INTO stocks (code, name, price, change)
            VALUES (?, ?, ?, ?)
        ''', (code, name, price, change))
        added_count += 1
        print(f"添加股票: {code} - {name}")
    except Exception as e:
        print(f"添加股票 {code} 失败: {e}")

# 提交更改
conn.commit()

# 查询当前股票总数
cursor.execute("SELECT COUNT(*) FROM stocks")
total_count = cursor.fetchone()[0]

# 关闭连接
conn.close()

print(f"\n操作完成! 添加了 {added_count} 支新股票，跳过了 {skipped_count} 支已存在的股票。")
print(f"数据库中现在共有 {total_count} 支股票。") 